<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId><%= packageName %></groupId>
	<artifactId><%= baseName %></artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<% if (jar) { %><packaging>jar</packaging><% } %><% if (war) { %><packaging>war</packaging><% } %>

	<name><%= baseName %></name>
	<description>Microservice project generated using custom yeoman generator</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version><%= bootVersion %></version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version><%= javaVersion %></java.version>
        <% if (usesSpringCloud) { %>
        <spring-cloud.version><%= springCloudVersion %></spring-cloud.version>
        <% } %>
		<springfox-version><%= springFoxVersion %></springfox-version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
	</properties>

	<dependencies>

        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>		
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox-version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox-version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.joschi.jackson</groupId>
            <artifactId>jackson-datatype-threetenbp</artifactId>
            <version>2.6.4</version>
        </dependency>

        <% if (cassandra) { %>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-cassandra</artifactId>
		</dependency><% } %>

        <% if (es) { %>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
		</dependency><% } %>

        <% if (mongo) { %>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency> <% } %>

        <% if (redis) { %>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency> <% } %>

        <!-- JPA -->
        <% if (jpa) { %>
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency><% } %>

        <% if (jdbc) { %>
		 <!-- JDBC -->
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency><% } %>

        <% if (mysql) { %>
		<!-- mysql -->
        <dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency><% } %>

        <% if (mssql) { %>
		<!-- sqlserver -->
        <dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<scope>runtime</scope>
		</dependency><% } %>

        <% if (configClient) { %>
        <!-- Config Server Client -->
        <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
        <dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-rsa</artifactId>
		</dependency><% } %>

        <% if (eureka) { %>
        <!-- Eureka -->
        <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency><% } %>

        <% if(hystrix) { %>
        <!-- Hystrix -->
        <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-hystrix</artifactId>
		</dependency><% } %>
        
        <% if (ribbon) { %>
        <!-- Ribbon -->
        <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-ribbon</artifactId>
		</dependency><% } %>

        <% if (zipkin) { %>
        <!-- Zipkin -->
        <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zipkin</artifactId>
		</dependency><% } %>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

    <% if (usesSpringCloud) { %>
    <dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement><% } %>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<% if (swaggerFile) { %>
			<plugin>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>2.3.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/<%= swaggerFile%></inputSpec>
                            <language>spring</language>
                            <generateApis>true</generateApis>
                            <generateModelTests>false</generateModelTests>
                            <generateApiDocumentation>true</generateApiDocumentation>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <generateModelDocumentation>false</generateModelDocumentation>
                            <addCompileSourceRoot>true</addCompileSourceRoot>
                            <supportingFilesToGenerate>HomeController.java,CustomInstantDeserializer.java,JacksonConfiguration.java,SwaggerDocumentationConfig.java,Swagger2SpringBoot.java,RFC3339DateFormat.java</supportingFilesToGenerate>
                            <modelPackage><%= packageName%>.model</modelPackage>
                            <apiPackage><%= packageName%>.api</apiPackage>
                            <output>${project.basedir}</output>
                            <configOptions>
                                <serializableModel>true</serializableModel>
                                <basePackage><%= packageName%></basePackage>
                                <configPackage><%= packageName%>.config</configPackage>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
                            </configOptions>
                            <environmentVariables>
                                <!-- generate all models -->
                                <models></models>
                            </environmentVariables>
						</configuration>
                    </execution>
                </executions>
            </plugin>
			<% } %>
		</plugins>
	</build>

</project>
